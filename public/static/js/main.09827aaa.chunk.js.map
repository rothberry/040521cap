{"version":3,"sources":["components/Home.js","context/Context.js","components/Nav.js","components/Post.js","containers/PostContainer.js","components/PostForm.js","components/Login.js","components/Profile.js","components/PostShow.js","components/Signup.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Home","Context","createContext","ContextProvider","props","useState","user","setUser","loggedIn","setLoggedIn","posts","setPosts","showPost","setShowPost","store","fetchPosts","fetch","then","res","json","data","console","log","errors","catch","err","findMe","credentials","error","addPost","p","fetchPost","id","Provider","value","children","Nav","history","useHistory","useContext","activeStyle","fontWeight","color","bg","to","style","Brand","onClick","method","push","Button","Post","content","username","ListGroupItem","className","action","e","PostContainer","ListGroup","map","PostForm","postContent","useRef","Form","onSubmit","preventDefault","postPostObj","headers","body","JSON","stringify","current","Group","Label","Control","placeholder","as","ref","type","Login","emailRef","passwordRef","loginObj","email","password","controlId","name","variant","Profile","bio","profile_picture","Image","src","fluid","width","PostShow","showForm","setForm","useParams","useEffect","size","comments","com","mappedComments","Signup","usernameRef","bioRef","signupObj","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09827aaa.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Lorem Ipsum is simply dummy text of the printing and typesetting\n        industry. Lorem Ipsum has been the industry's standard dummy text ever\n        since the 1500s, when an unknown printer took a galley of type and\n        scrambled it to make a type specimen book. It has survived not only five\n        centuries, but also the leap into electronic typesetting, remaining\n        essentially unchanged. It was popularised in the 1960s with the release\n        of Letraset sheets containing Lorem Ipsum passages, and more recently\n        with desktop publishing software like Aldus PageMaker including versions\n        of Lorem Ipsum.\n      </p>\n    </div>\n  )\n}\n\nexport default Home\n","// GOal => create our \"store\" of global state\nimport { createContext, useState } from \"react\"\n\nexport const Context = createContext()\n\n// create provider\n\nconst ContextProvider = (props) => {\n  // going to wrap around our entire App\n  // similar to the BrowserRouter\n\n  // ?MOVED FROM APP.js\n  const [user, setUser] = useState({})\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [posts, setPosts] = useState([])\n  const [showPost, setShowPost] = useState({})\n\n  const findMe = () => {\n    fetch(\"/me\", {\n      credentials: \"same-origin\",\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          setUser(data)\n          setLoggedIn(true)\n        } else {\n          console.log(data)\n        }\n      })\n      .catch((err) => console.log({ err }))\n  }\n\n  const fetchPosts = () => {\n    fetch(\"/posts\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        if (!data.errors) {\n          setPosts(data)\n        } else {\n          console.log(\"Errors: \", data.errors)\n        }\n      })\n      .catch((err) => console.log({ err }))\n  }\n\n  const addPost = (p) => {\n    setPosts([...posts, p])\n  }\n\n  const fetchPost = (id) => {\n    fetch(`/posts/${id}`)\n      .then((res) => res.json())\n      .then((p) => {\n        setShowPost(p)\n      })\n      .catch((err) => console.log({ err }))\n  }\n  // the value prop inside the provider is where we pass down our global state\n  const store = {\n    user: user,\n    loggedIn,\n    posts,\n    setUser,\n    setLoggedIn,\n    setPosts,\n    fetchPosts,\n    findMe,\n    addPost,\n    fetchPost,\n    showPost,\n  }\n\n  return <Context.Provider value={store}>{props.children}</Context.Provider>\n}\n\nexport default ContextProvider\n","import { NavLink, useHistory } from \"react-router-dom\"\nimport NavBar from \"react-bootstrap/Navbar\"\nimport Button from \"react-bootstrap/esm/Button\"\nimport { useContext } from \"react\"\nimport { Context } from \"../context/Context\"\n\nconst Nav = () => {\n  const history = useHistory()\n\n  const { setUser, loggedIn, setLoggedIn } = useContext(Context)\n  \n  const activeStyle = {\n    fontWeight: \"bold\",\n    color: \"red\",\n  }\n\n  const handleLogout = () => {\n    fetch(\"/logout\", {\n      method: \"DELETE\",\n    }).then((data) => {\n      console.log(\"logged out\")\n      setUser({})\n      setLoggedIn(false)\n      history.push(\"/\")\n    })\n  }\n\n  if (loggedIn) {\n    return (\n      <>\n        <NavBar bg='dark'>\n          <NavLink to='/' activeStyle={activeStyle}>\n            <h1 style={{ color: \"white\" }}>Sozials</h1>\n          </NavLink>\n          <NavLink to='/feed' activeStyle={activeStyle}>\n            Posts\n          </NavLink>\n          <NavLink to='/new-post' activeStyle={activeStyle}>\n            New Post\n          </NavLink>\n          <NavLink to='/profile' activeStyle={activeStyle}>\n            Profile\n          </NavLink>\n          <NavBar.Brand style={activeStyle} onClick={handleLogout}>\n            <Button>Logout</Button>\n          </NavBar.Brand>\n        </NavBar>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <NavBar bg='light'>\n          <NavLink to='/' activeStyle={activeStyle}>\n            <h1 style={{ color: \"black\" }}>Sozials</h1>\n          </NavLink>\n          <NavLink to='/login' activeStyle={activeStyle}>\n            Login\n          </NavLink>\n        </NavBar>\n      </>\n    )\n  }\n}\n\nexport default Nav\n","// import { useEffect } from \"react\"\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\"\nimport { useHistory } from \"react-router\"\n\nconst Post = ({ content, id, username }) => {\n  const history = useHistory()\n\n  const linkToPostShow = (e) => {\n    history.push(`/posts/${id}`)\n  }\n\n  return (\n    <ListGroupItem className={`post-${id}`} action onClick={linkToPostShow}>\n      {username}: {content}\n    </ListGroupItem>\n  )\n}\n\nexport default Post\n","import Post from \"../components/Post\"\nimport ListGroup from \"react-bootstrap/ListGroup\"\nimport { useContext } from \"react\"\nimport { Context } from \"../context/Context\"\n\nconst PostContainer = () => {\n  // const {posts} = props\n  const { posts } = useContext(Context)\n\n  const mappedPosts = () => {\n    return posts.map(({ content, id, user: { username } }) => {\n      return <Post key={id} content={content} id={id} username={username} />\n    })\n  }\n\n  return (\n    <ListGroup className='posts-container'>\n      {/* Mapping function for all the posts */}\n      {mappedPosts()}\n    </ListGroup>\n  )\n}\n\nexport default PostContainer\n","import { useContext, useRef } from \"react\"\nimport { Context } from \"../context/Context\"\nimport { useHistory } from \"react-router-dom\"\nimport Form from \"react-bootstrap/Form\"\nimport Button from \"react-bootstrap/Button\"\n\nconst PostForm = () => {\n  const postContent = useRef(\"\")\n  const history = useHistory()\n\n  // const [state, setState] = useState({\n  //   postContent: \"\"\n  // })\n  // const handleChange = e => {\n  //   setState([e.target.name]: e.target.value)\n  // }\n\n  const { addPost } = useContext(Context)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const postPostObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ content: postContent.current.value }),\n    }\n    fetch(\"/posts\", postPostObj)\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.errors) {\n          addPost(data)\n          history.push(\"/feed\")\n        }\n      })\n  }\n\n  return (\n    <div className='post-form'>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className='mb-3'>\n          <Form.Label>Create Your Posts</Form.Label>\n          <Form.Control\n            placeholder=\"What's on your mind?\"\n            as='textarea'\n            ref={postContent}\n          />\n        </Form.Group>\n        <Button type='submit'>Submit</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default PostForm\n","import { useContext, useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Context } from \"../context/Context\"\nimport Form from \"react-bootstrap/Form\"\nimport Button from \"react-bootstrap/Button\"\n\nconst Login = () => {\n  const emailRef = useRef(\"\")\n  const passwordRef = useRef(\"\")\n  const history = useHistory()\n  const { setUser, setLoggedIn } = useContext(Context)\n\n  const loginHandler = (e) => {\n    e.preventDefault()\n\n    const loginObj = {\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n      }),\n    }\n    fetch(\"/login\", loginObj)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        if (!data.errors) {\n          console.log(\"LOGGED IN\")\n          setUser(data)\n          setLoggedIn(true)\n          history.push(\"/profile\")\n        } else {\n          console.log(\"no catch: \", data.errors)\n        }\n      })\n      .catch((err) => console.log(\"catch: \", err))\n  }\n\n  return (\n    <Form onSubmit={loginHandler}>\n      <Form.Group className='mb-3' controlId='formBasicEmail'>\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          ref={emailRef}\n          name='email'\n          type='email'\n          placeholder='Enter email'\n        />\n      </Form.Group>\n\n      <Form.Group className='mb-3' controlId='formBasicPassword'>\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          ref={passwordRef}\n          name='password'\n          type='password'\n          placeholder='Password'\n        />\n      </Form.Group>\n\n      <Button\n        variant='secondary'\n        onClick={() => {\n          history.push(\"/signup\")\n        }}\n      >\n        Signup\n      </Button>\n\n      <Button variant='primary' type='submit'>\n        Submit\n      </Button>\n    </Form>\n  )\n}\n\nexport default Login\n","import { useContext } from \"react\"\nimport { Context } from \"../context/Context\"\nimport Image from \"react-bootstrap/Image\"\n\nconst Profile = () => {\n  const imgStyle = {\n    width: \"20%\",\n  }\n  const {\n    user: { username, bio, profile_picture },\n  } = useContext(Context)\n\n  return (\n    <>\n      <h1>{username}</h1>\n      <p>{bio}</p>\n      <Image src={profile_picture} fluid style={imgStyle} />\n    </>\n  )\n}\n\nexport default Profile\n","/* eslint-disable */\nimport { useParams } from \"react-router\"\nimport { useState, useEffect, useContext } from \"react\"\nimport { Context } from \"../context/Context\"\nimport { Chat } from \"react-bootstrap-icons\"\nimport Form from \"react-bootstrap/Form\"\nimport Button from \"react-bootstrap/esm/Button\"\n\nconst PostShow = () => {\n  // const [showPost, setShowPost] = useState({})\n  const [showForm, setForm] = useState(false)\n  const { id } = useParams()\n  const { showPost, fetchPost } = useContext(Context)\n\n  useEffect(() => {\n    fetchPost(id)\n  }, [])\n\n  const mappedComments = () => {\n    if (!!showPost.comments) {\n      return showPost.comments.map((com) => {\n        return <li key={com.id}>{com.content}</li>\n      })\n    }\n  }\n\n  const toggleForm = () => {\n    setForm(!showForm)\n  }\n\n  return (\n    <div className={`post-show-${id}`}>\n      <h1>{showPost.content}</h1>\n      <Button onClick={toggleForm} size='sm' variant='light'>\n        <Chat />\n      </Button>\n      {showForm ? (\n        <Form.Group fluid='true'>\n          <Form.Control as='textarea' placeholder='Write your comment here' />\n        </Form.Group>\n      ) : null}\n      {mappedComments()}\n    </div>\n  )\n}\n\nexport default PostShow\n","import { useContext, useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport Form from \"react-bootstrap/Form\"\nimport Button from \"react-bootstrap/Button\"\nimport { Context } from \"../context/Context\"\n\nconst Signup = () => {\n  const emailRef = useRef(\"\")\n  const passwordRef = useRef(\"\")\n  const usernameRef = useRef(\"\")\n  const bioRef = useRef(\"\")\n  const picRef = useRef(\"\")\n\n  const { setUser, setLoggedIn } = useContext(Context)\n  const history = useHistory()\n\n  const signupHandler = (e) => {\n    e.preventDefault()\n\n    const signupObj = {\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n      }),\n    }\n    fetch(\"/signup\", signupObj)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        if (!data.errors) {\n          console.log(\"LOGGED IN\")\n          setUser(data)\n          setLoggedIn(true)\n          history.push(\"/profile\")\n        } else {\n          console.log(\"no catch: \", data.errors)\n        }\n      })\n      .catch((err) => console.log(\"catch: \", err))\n  }\n\n  return (\n    <Form onSubmit={signupHandler}>\n      <Form.Group className='mb-3' controlId='formBasicEmail'>\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          ref={emailRef}\n          name='email'\n          type='email'\n          placeholder='Enter email'\n        />\n      </Form.Group>\n\n      <Form.Group className='mb-3' controlId='formBasicPassword'>\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          ref={passwordRef}\n          name='password'\n          type='password'\n          placeholder='Password'\n        />\n      </Form.Group>\n\n      <Form.Group className='mb-3' controlId='formBasicBio'>\n        <Form.Label>Bio</Form.Label>\n        <Form.Control ref={bioRef} name='bio' as='textarea' placeholder='Bio' />\n      </Form.Group>\n\n      <Form.Group className='mb-3' controlId='formBasicUsername'>\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          ref={usernameRef}\n          name='username'\n          type='text'\n          placeholder='Username'\n        />\n      </Form.Group>\n\n      <Form.Group className='mb-3' controlId='formFile'>\n        <Form.Label>Choose Picture</Form.Label>\n        <Form.Control type='file' />\n      </Form.Group>\n\n      <Button variant='primary' type='submit'>\n        Submit\n      </Button>\n    </Form>\n  )\n}\n\nexport default Signup\n","import { Switch, Route } from \"react-router-dom\"\nimport Home from \"../components/Home\"\nimport Nav from \"../components/Nav\"\nimport PostContainer from \"./PostContainer\"\nimport PostForm from \"../components/PostForm\"\nimport Login from \"../components/Login\"\nimport Profile from \"../components/Profile\"\nimport PostShow from \"../components/PostShow\"\nimport \"./App.css\"\nimport { useEffect, useContext } from \"react\"\nimport { Context } from \"../context/Context\"\nimport Signup from \"../components/Signup\"\n\nconst App = () => {\n  // ! Front end routes\n  // const [user, setUser] = useState({})\n  // const [loggedIn, setLoggedIn] = useState(false)\n  // const [posts, setPosts] = useState([])\n  const { fetchPosts, findMe } = useContext(Context)\n\n  // Component did mount\n  useEffect(() => {\n    findMe()\n    // fetchPosts()\n  }, [])\n\n  // ! MOVED TO OUR CONTEXT STORE\n  // const findMe = () => {\n  // const fetchPosts = () => {\n  // const addPost = (p) => {\n\n  return (\n    <div className='App'>\n      <Nav />\n      <Switch>\n        <Route exact path='/' component={Home} />\n\n        <Route exact path='/feed' component={PostContainer} />\n\n        <Route exact path='/new-post' component={PostForm} />\n\n        <Route exact path='/login' component={Login} />\n\n        <Route exact path='/signup' component={Signup} />\n\n        <Route exact path='/profile' component={Profile} />\n\n        <Route path='/posts/:id' component={PostShow} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./containers/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport ContextProvider from \"./context/Context\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ContextProvider>\n        <App />\n      </ContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}